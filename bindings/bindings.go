// Generated by `wit-bindgen` 0.25.0. DO NOT EDIT!
package bindings

// #include "bindings.h"
// #include <stdlib.h>
import "C"
import "unsafe"
// Export functions from example
var bindings Bindings = nil
// `SetBindings` sets the `Bindings` interface implementation.
// This function will need to be called by the init() function from the guest application.
// It is expected to pass a guest implementation of the `Bindings` interface.
func SetBindings(i Bindings) {
  bindings = i
}
type Bindings interface {
  HelloWorld() string 
}
//export bindings_hello_world
func bindingsHelloWorld(ret *C.bindings_string_t) {
  result := bindings.HelloWorld()
  var lower_result C.bindings_string_t

  // use unsafe.Pointer to avoid copy
  lower_result.ptr = (*uint8)(unsafe.Pointer(C.CString(result)))
  lower_result.len = C.size_t(len(result))
  *ret = lower_result

}
